<?xml version="1.0" encoding="UTF-8"?>
<beans	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:int="http://www.springframework.org/schema/integration"
		xmlns:file="http://www.springframework.org/schema/integration/file"
		xmlns:stream="http://www.springframework.org/schema/integration/stream"
		xsi:schemaLocation="http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
			http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-2.2.xsd
			http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream-4.0.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- ########################## -->
	<!-- ###     Properties     ### -->
	<!-- ########################## -->
	
	<context:property-placeholder
		location="classpath:app.properties"
		ignore-unresolvable="true"
		order="1"/>
		
	<!-- ########################## -->
	<!-- ###      Encoding      ### -->
	<!-- ########################## -->

	<file:inbound-channel-adapter 
		directory="${paths.encode}"
		channel="encodeChannel"
		filename-regex="${encode.regex}">
		<int:poller fixed-rate="5000"/>
	</file:inbound-channel-adapter>
	
	<int:chain input-channel="encodeChannel" output-channel="stdout">
	    <int:header-enricher>
	        <int:header name="#{T(org.springframework.integration.file.FileHeaders).ORIGINAL_FILE}" expression="payload"/>
	    </int:header-enricher>
	    <int:service-activator ref="fileProcessor" method="encode"/>
	    <int:service-activator expression="headers['#{T(org.springframework.integration.file.FileHeaders).ORIGINAL_FILE}'].delete()"/>
	</int:chain>
	
	<!-- ########################## -->
	<!-- ###     Youtube-dl     ### -->
	<!-- ########################## -->
	
	<file:inbound-channel-adapter 
		directory="${paths.youtube.download}"
		channel="youtubeDownloadChannel"
		filename-regex="${url.regex}">
		<int:poller	fixed-rate="5000"/>
	</file:inbound-channel-adapter>
	
	<int:chain input-channel="youtubeDownloadChannel" output-channel="stdout">
	    <file:file-to-string-transformer delete-files="true"/> 
	    <int:service-activator ref="fileProcessor" method="youtubeDownload"/>
	</int:chain>
	
	<!-- ########################## -->
	<!-- ###     Youtube-MP3    ### -->
	<!-- ########################## -->
	
	<file:inbound-channel-adapter 
		directory="${paths.youtube.mp3}"
		channel="youtubeMp3Channel"
		filename-regex="${url.regex}">
		<int:poller	fixed-rate="5000"/>
	</file:inbound-channel-adapter>
	
	<int:chain input-channel="youtubeMp3Channel" output-channel="stdout">
	    <file:file-to-string-transformer delete-files="true"/>
	    <int:service-activator ref="fileProcessor" method="youtubeMp3"/>
	</int:chain>
	
	<!-- ########################## -->
	<!-- ###     Plain MP3      ### -->
	<!-- ########################## -->	
	
	<file:inbound-channel-adapter
	    directory="${paths.mp3}"
	    channel="mp3EncodeChannel"
	    filename-regex="${mp3.regex}">
	    <int:poller fixed-rate="5000"/>
	</file:inbound-channel-adapter>
	
	<int:chain input-channel="mp3EncodeChannel" output-channel="stdout">
	    <int:header-enricher>
	        <int:header name="#{T(org.springframework.integration.file.FileHeaders).ORIGINAL_FILE}" expression="payload"/>
	    </int:header-enricher>
		<int:service-activator ref="fileProcessor" method="encodeMp3"/>
		<int:service-activator expression="headers['#{T(org.springframework.integration.file.FileHeaders).ORIGINAL_FILE}'].delete()"/>
	</int:chain>
	
	<!-- ########################## -->
	<!-- ###   ffmpeg rotate    ### -->
	<!-- ########################## -->	
	
	<file:inbound-channel-adapter
	    directory="${paths.rotate}"
	    channel="movieRotateChannel"
	    filename-regex="${rotate.regex}"
	    prevent-duplicates="false">
		<int:poller fixed-rate="5000"/>
	</file:inbound-channel-adapter>
	
	<int:chain input-channel="movieRotateChannel" output-channel="stdout">
	    <int:header-enricher>
	        <int:header name="originalFile" expression="payload"/>
	        <int:header name="workingFile" expression="new java.io.File(payload.parent + '/.working', payload.name)"/>
	    </int:header-enricher>
	    <int:service-activator expression="headers.workingFile.getParentFile().mkdirs()"/>
	    <int:service-activator expression="headers.originalFile.renameTo(headers.workingFile)"/>
		<int:transformer expression="headers.workingFile"/>
		<int:service-activator ref="fileProcessor" method="rotateMovie"/>
		<int:service-activator expression="payload.delete()"/>
	</int:chain>

	<!-- ########################## -->
	<!-- ###  Generic Adapters  ### -->
	<!-- ########################## -->
	
	<stream:stdout-channel-adapter 
		id="stdout" 
		append-newline="true" />
		
	<!-- ########################## -->
	<!-- ###       Beans        ### -->
	<!-- ########################## -->
	
	<bean
		id="fileProcessor"
		class="datagator.processor.FileProcessor">
		<property name="encodeDir" value="${paths.encode}"/>
		<property name="youtubeDownloadDir" value="${paths.youtube.download}"/>
		<property name="youtubeMp3Dir" value="${paths.youtube.mp3}"/>
		<property name="completed" value="${paths.encode.complete}"/>
		<property name="encodeExtension" value="${encode.extension}"/>
		<property name="encodingPreset" value="${encode.preset}"/>
		<property name="regex" value="${encode.regex}"/>
		<property name="mp3Quality" value="${mp3.quality}"/>
		<property name="rotateParent" value="${paths.rotate}"/>
	</bean>	
</beans>